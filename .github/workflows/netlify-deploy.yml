# based on https://sung.codes/blog/2019/12/25/building-gatsby-with-git-hub-actions-and-deploying-to-netlify/
name: Build & Deploy

# DONE: integrate [cache](https://github.com/actions/cache)
on:
  push:
    branches:
      - master
    # only deploy if .js/.jsx, .ts/.tsx, yarn.lock or content files have changed

    # TODO: not running on content changes??
    paths:
      - '**.jsx?'
      - '**.tsx?'
      - 'yarn.lock'
      - 'sites/**/content/**'
      - '!plopfile.js'
      - '!plop-templates/**'
      - '!packages/plop-pack*'

    # paths-ignore: ['docs/**']
  # use https://hub.github.com/hub-release.1.html to trigger a build
  # release:
  #   types: [published]
  # push:
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onpushpull_requestpaths
  #   paths-ignore: ['docs/**'] # to be extended if I decide to enable build on push
  #   branches: [master]
  # 1. Trigger the workflow every 2 hours
  # schedule:
  #   - cron: '0 */2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # - name: Use cached Node modules
      #   uses: actions/cache@v1
      #   with:
      #     path: node_modules
      #     key: nodeModules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       nodeModules-

      - name: Get yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn
      - name: Build Packages
        run: yarn lerna run build
      - name: Build
        run: yarn workspace @gaiama/coding4.gaiama.org build:live

      - name: Publish
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=sites/coding4.gaiama.org/public --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
